services:
  database:
    container_name: database
    restart: always
    image: postgres:16-alpine
    shm_size: 256mb
    networks:
      - internal_network
    healthcheck:
      test: ['CMD', 'pg-isready', '-U', 'postgres']
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      # TODO: Use env
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  message-queue:
    container_name: message-queue
    image: redis:7-alpine
    command: redis-server --requirepass redis --appendonly yes
    ports:
      - 6379:6379
    networks:
      - internal_network

  backend:
    container_name: backend
    build: .
    restart: always
    volumes:
      - ./dashboard:/dashboard
    environment:
      - DJANGO_SETTINGS_MODULE=dashboard.settings
    networks:
      - internal_network
      - external_network
    ports:
      - 8000:8000
    depends_on:
      - database
      - message-queue

  worker:
    container_name: worker
    build: .
    entrypoint: [
      "celery",
      "-A",
      "dashboard",
      "worker",
      "-Q",
      "default-queue",
      "--loglevel=INFO"
    ]
    volumes:
      - ./dashboard:/app
    depends_on:
      - database
      - message-queue
    networks:
      - internal_network

  scheduler:
    container_name: scheduler
    build: .
    entrypoint: [
      "celery",
      "-A",
      "dashboard",
      "beat",
      "--loglevel=INFO",
      "--scheduler=django_celery_beat.schedulers:DatabaseScheduler"
    ]
    volumes:
      - ./dashboard:/app
    depends_on:
      - database
      - message-queue
    networks:
      - internal_network

networks:
  external_network:
  internal_network:
    internal: true

volumes:
  postgres_data:
